// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySheetListBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView ACid;

  @NonNull
  public final ImageView LBid;

  @NonNull
  public final ImageView gfgi;

  @NonNull
  public final ImageView sderoadmapid;

  @NonNull
  public final ImageView sdesheetid;

  @NonNull
  public final ImageView striverid;

  private ActivitySheetListBinding(@NonNull ScrollView rootView, @NonNull ImageView ACid,
      @NonNull ImageView LBid, @NonNull ImageView gfgi, @NonNull ImageView sderoadmapid,
      @NonNull ImageView sdesheetid, @NonNull ImageView striverid) {
    this.rootView = rootView;
    this.ACid = ACid;
    this.LBid = LBid;
    this.gfgi = gfgi;
    this.sderoadmapid = sderoadmapid;
    this.sdesheetid = sdesheetid;
    this.striverid = striverid;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySheetListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySheetListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sheet_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySheetListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ACid;
      ImageView ACid = ViewBindings.findChildViewById(rootView, id);
      if (ACid == null) {
        break missingId;
      }

      id = R.id.LBid;
      ImageView LBid = ViewBindings.findChildViewById(rootView, id);
      if (LBid == null) {
        break missingId;
      }

      id = R.id.gfgi;
      ImageView gfgi = ViewBindings.findChildViewById(rootView, id);
      if (gfgi == null) {
        break missingId;
      }

      id = R.id.sderoadmapid;
      ImageView sderoadmapid = ViewBindings.findChildViewById(rootView, id);
      if (sderoadmapid == null) {
        break missingId;
      }

      id = R.id.sdesheetid;
      ImageView sdesheetid = ViewBindings.findChildViewById(rootView, id);
      if (sdesheetid == null) {
        break missingId;
      }

      id = R.id.striverid;
      ImageView striverid = ViewBindings.findChildViewById(rootView, id);
      if (striverid == null) {
        break missingId;
      }

      return new ActivitySheetListBinding((ScrollView) rootView, ACid, LBid, gfgi, sderoadmapid,
          sdesheetid, striverid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
