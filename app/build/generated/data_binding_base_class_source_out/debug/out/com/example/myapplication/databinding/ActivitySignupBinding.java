// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText emailid;

  @NonNull
  public final Button loginbtn;

  @NonNull
  public final TextView logintext;

  @NonNull
  public final EditText pass;

  @NonNull
  public final EditText passwordId;

  @NonNull
  public final TextView registeredtext;

  private ActivitySignupBinding(@NonNull LinearLayout rootView, @NonNull EditText emailid,
      @NonNull Button loginbtn, @NonNull TextView logintext, @NonNull EditText pass,
      @NonNull EditText passwordId, @NonNull TextView registeredtext) {
    this.rootView = rootView;
    this.emailid = emailid;
    this.loginbtn = loginbtn;
    this.logintext = logintext;
    this.pass = pass;
    this.passwordId = passwordId;
    this.registeredtext = registeredtext;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailid;
      EditText emailid = ViewBindings.findChildViewById(rootView, id);
      if (emailid == null) {
        break missingId;
      }

      id = R.id.loginbtn;
      Button loginbtn = ViewBindings.findChildViewById(rootView, id);
      if (loginbtn == null) {
        break missingId;
      }

      id = R.id.logintext;
      TextView logintext = ViewBindings.findChildViewById(rootView, id);
      if (logintext == null) {
        break missingId;
      }

      id = R.id.pass;
      EditText pass = ViewBindings.findChildViewById(rootView, id);
      if (pass == null) {
        break missingId;
      }

      id = R.id.password_id;
      EditText passwordId = ViewBindings.findChildViewById(rootView, id);
      if (passwordId == null) {
        break missingId;
      }

      id = R.id.registeredtext;
      TextView registeredtext = ViewBindings.findChildViewById(rootView, id);
      if (registeredtext == null) {
        break missingId;
      }

      return new ActivitySignupBinding((LinearLayout) rootView, emailid, loginbtn, logintext, pass,
          passwordId, registeredtext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
